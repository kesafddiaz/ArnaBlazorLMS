@page "/manager/user/{UserId:int}"
@using ArnaBlazorTest.Models
@using ArnaBlazorTest.Services
@attribute [Authorize(Roles = "Manager")]
@inject IProgressService ProgressService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Learner Progress</PageTitle>

<div class="container mt-4">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (error != null)
    {
        <div class="alert alert-danger" role="alert">
            @error
        </div>
    }
    else if (learner != null)
    {
        <div class="d-flex justify-content-between align-items-center mb-4">
            <div>
                <h2>@learner.User.Username</h2>
                <p class="text-muted">@learner.User.Email</p>
            </div>
            <button class="btn btn-outline-primary" @onclick="NavigateToTeam">
                Back to Team Overview
            </button>
        </div>

        <div class="row mb-4">
            <div class="col-md-4">
                <UserProgressCard 
                    User="@learner.User"
                    CompletedCount="@learner.CompletedAssignments"
                    TotalCount="@learner.TotalAssignments"
                    AverageScore="@learner.AverageScore"
                    LastActivity="@learner.LastActivityDate"
                    ShowViewButton="false" />
            </div>

            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Progress Over Time</h5>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Week</th>
                                        <th>Completed</th>
                                        <th>Average Score</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var stat in learner.WeeklyStats.OrderByDescending(s => s.WeekStart))
                                    {
                                        <tr>
                                            <td>@stat.WeekStart.ToString("MMM dd") - @stat.WeekStart.AddDays(6).ToString("MMM dd")</td>
                                            <td>@stat.CompletedCount assignments</td>
                                            <td>@stat.AverageScore.ToString("F1")%</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Assignment Details</h5>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Assignment</th>
                                <th>Status</th>
                                <th>Score</th>
                                <th>Submitted</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var progress in learner.AssignmentProgresses.OrderByDescending(p => p.SubmittedAt))
                            {
                                <tr>
                                    <td>
                                        <a href="/assignment/@progress.AssignmentId">@progress.Assignment.Title</a>
                                    </td>
                                    <td>
                                        <span class="badge @GetStatusBadgeClass(progress.Status)">
                                            @progress.Status
                                        </span>
                                    </td>
                                    <td>@progress.Score%</td>
                                    <td>@(progress.SubmittedAt?.ToString("MMM dd, yyyy HH:mm") ?? "-")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int UserId { get; set; }

    private LearnerDetailReport? learner;
    private bool isLoading = true;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            learner = await ProgressService.GetLearnerDetailReportAsync(UserId);
            if (learner == null)
            {
                error = "Learner not found.";
                return;
            }
        }
        catch (Exception)
        {
            error = "Failed to load learner details. Please try again later.";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToTeam()
    {
        NavigationManager.NavigateTo("/manager/team");
    }

    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "completed" => "bg-success",
            "in_progress" => "bg-warning",
            _ => "bg-secondary"
        };
    }
} 