@page "/progress"
@using ArnaBlazorTest.Models
@using ArnaBlazorTest.Services
@using Microsoft.AspNetCore.Components.Authorization
@attribute [Authorize]
@inject IProgressService ProgressService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>My Progress</PageTitle>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>My Learning Progress</h2>
        <a href="/" class="btn btn-outline-secondary">Back to Home</a>
    </div>

    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (error != null)
    {
        <div class="alert alert-danger" role="alert">
            @error
        </div>
    }
    else if (progressReport != null)
    {
        <div class="row">
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Overview</h5>
                        <div class="mt-3">
                            <p>Completed Assignments: @progressReport.CompletedAssignments / @progressReport.TotalAssignments</p>
                            <div class="progress mb-3">
                                <div class="progress-bar" role="progressbar" 
                                     style="width: @(progressReport.CompletedAssignments * 100 / Math.Max(1, progressReport.TotalAssignments))%">
                                </div>
                            </div>
                            <p>Average Score: @progressReport.AverageScore.ToString("F1")%</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Assignment History</h5>
                        @if (progressReport.Progresses.Any())
                        {
                            <div class="table-responsive">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Assignment</th>
                                            <th>Status</th>
                                            <th>Score</th>
                                            <th>Completed</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var progress in progressReport.Progresses.OrderByDescending(p => p.SubmittedAt))
                                        {
                                            <tr>
                                                <td>
                                                    <a href="/assignment/@progress.AssignmentId">
                                                        @progress.Assignment.Title
                                                    </a>
                                                </td>
                                                <td>
                                                    <span class="badge @GetStatusBadgeClass(progress.Status)">
                                                        @progress.Status
                                                    </span>
                                                </td>
                                                <td>@progress.Score%</td>
                                                <td>
                                                    @(progress.SubmittedAt?.ToString("MMM dd, yyyy") ?? "-")
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-4">
                                <p class="text-muted">No assignments completed yet. Start with your first assignment!</p>
                                <a href="/assignments" class="btn btn-primary">Go to Assignments</a>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    private UserProgressReport? progressReport;
    private bool isLoading = true;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var userId = int.Parse(user.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value ?? "0");

            if (userId == 0)
            {
                error = "User not authenticated properly.";
                return;
            }

            progressReport = await ProgressService.GetUserProgressReportAsync(userId);
        }
        catch (Exception ex)
        {
            error = "Failed to load progress report. Please try again later.";
            Console.WriteLine($"Error loading progress: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private string GetStatusBadgeClass(string status)
    {
        return status.ToLower() switch
        {
            "completed" => "bg-success",
            "in_progress" => "bg-warning",
            _ => "bg-secondary"
        };
    }
} 